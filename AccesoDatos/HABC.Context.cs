//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AccesoDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using Entidades;
    
    public partial class HABCEntidades : DbContext
    {
        public HABCEntidades()
            : base("name=HABCEntidades")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Diagnostico> Diagnostico { get; set; }
        public virtual DbSet<Especialidades> Especialidades { get; set; }
        public virtual DbSet<Medicamento> Medicamento { get; set; }
        public virtual DbSet<MedicoEspecialista> MedicoEspecialista { get; set; }
        public virtual DbSet<Paciente> Paciente { get; set; }
        public virtual DbSet<RegistroCitas> RegistroCitas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int PA_Diagnostico_Actualizar(Nullable<int> idDiagnostico, Nullable<int> idCita, string observaciones)
        {
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Diagnostico_Actualizar", idDiagnosticoParameter, idCitaParameter, observacionesParameter);
        }
    
        public virtual int PA_Diagnostico_Eliminar(Nullable<int> idDiagnostico)
        {
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Diagnostico_Eliminar", idDiagnosticoParameter);
        }
    
        public virtual int PA_Diagnostico_insertar(Nullable<int> idDiagnostico, Nullable<int> idCita, string observaciones)
        {
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Diagnostico_insertar", idDiagnosticoParameter, idCitaParameter, observacionesParameter);
        }
    
        public virtual ObjectResult<PA_Diagnostico_MostrarDetalle_Result> PA_Diagnostico_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Diagnostico_MostrarDetalle_Result>("PA_Diagnostico_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_Diagnostico_MostrarDetallexid_Result> PA_Diagnostico_MostrarDetallexid(Nullable<int> idDiagnostico)
        {
            var idDiagnosticoParameter = idDiagnostico.HasValue ?
                new ObjectParameter("IdDiagnostico", idDiagnostico) :
                new ObjectParameter("IdDiagnostico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Diagnostico_MostrarDetallexid_Result>("PA_Diagnostico_MostrarDetallexid", idDiagnosticoParameter);
        }
    
        public virtual int PA_Especialidad_Actualizar(Nullable<int> idEspecialidades, string tipoEspecialidad)
        {
            var idEspecialidadesParameter = idEspecialidades.HasValue ?
                new ObjectParameter("IdEspecialidades", idEspecialidades) :
                new ObjectParameter("IdEspecialidades", typeof(int));
    
            var tipoEspecialidadParameter = tipoEspecialidad != null ?
                new ObjectParameter("TipoEspecialidad", tipoEspecialidad) :
                new ObjectParameter("TipoEspecialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Especialidad_Actualizar", idEspecialidadesParameter, tipoEspecialidadParameter);
        }
    
        public virtual int PA_Especialidad_Eliminar(Nullable<int> idEspecialidades)
        {
            var idEspecialidadesParameter = idEspecialidades.HasValue ?
                new ObjectParameter("IdEspecialidades", idEspecialidades) :
                new ObjectParameter("IdEspecialidades", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Especialidad_Eliminar", idEspecialidadesParameter);
        }
    
        public virtual int PA_Especialidad_insertar(Nullable<int> idEspecialidades, string tipoEspecialidad)
        {
            var idEspecialidadesParameter = idEspecialidades.HasValue ?
                new ObjectParameter("IdEspecialidades", idEspecialidades) :
                new ObjectParameter("IdEspecialidades", typeof(int));
    
            var tipoEspecialidadParameter = tipoEspecialidad != null ?
                new ObjectParameter("TipoEspecialidad", tipoEspecialidad) :
                new ObjectParameter("TipoEspecialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Especialidad_insertar", idEspecialidadesParameter, tipoEspecialidadParameter);
        }
    
        public virtual ObjectResult<PA_Especialidad_MostrarDetalle_Result> PA_Especialidad_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Especialidad_MostrarDetalle_Result>("PA_Especialidad_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_Especialidad_MostrarDetallexid_Result> PA_Especialidad_MostrarDetallexid(Nullable<int> idEspecialidades)
        {
            var idEspecialidadesParameter = idEspecialidades.HasValue ?
                new ObjectParameter("IdEspecialidades", idEspecialidades) :
                new ObjectParameter("IdEspecialidades", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Especialidad_MostrarDetallexid_Result>("PA_Especialidad_MostrarDetallexid", idEspecialidadesParameter);
        }
    
        public virtual int PA_Medicamentos_Actualizar(Nullable<int> idMedicamento, Nullable<int> idCita, string cantidad, string instrucciones)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var cantidadParameter = cantidad != null ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(string));
    
            var instruccionesParameter = instrucciones != null ?
                new ObjectParameter("Instrucciones", instrucciones) :
                new ObjectParameter("Instrucciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Medicamentos_Actualizar", idMedicamentoParameter, idCitaParameter, cantidadParameter, instruccionesParameter);
        }
    
        public virtual int PA_Medicamentos_Eliminar(Nullable<int> idMedicamento)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Medicamentos_Eliminar", idMedicamentoParameter);
        }
    
        public virtual int PA_Medicamentos_Insertar(Nullable<int> idMedicamento, Nullable<int> idCita, string cantidad, string instrucciones)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(int));
    
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var cantidadParameter = cantidad != null ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(string));
    
            var instruccionesParameter = instrucciones != null ?
                new ObjectParameter("Instrucciones", instrucciones) :
                new ObjectParameter("Instrucciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Medicamentos_Insertar", idMedicamentoParameter, idCitaParameter, cantidadParameter, instruccionesParameter);
        }
    
        public virtual ObjectResult<PA_Medicamentos_MostrarDetalle_Result> PA_Medicamentos_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Medicamentos_MostrarDetalle_Result>("PA_Medicamentos_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_Medicamentos_MostrarDetallexid_Result> PA_Medicamentos_MostrarDetallexid(Nullable<int> idMedicamento)
        {
            var idMedicamentoParameter = idMedicamento.HasValue ?
                new ObjectParameter("IdMedicamento", idMedicamento) :
                new ObjectParameter("IdMedicamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Medicamentos_MostrarDetallexid_Result>("PA_Medicamentos_MostrarDetallexid", idMedicamentoParameter);
        }
    
        public virtual int PA_MedicoEspecialista_Actualizar(Nullable<int> idmedicoEspecialista, Nullable<int> idEspecialidad, string nombre)
        {
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_MedicoEspecialista_Actualizar", idmedicoEspecialistaParameter, idEspecialidadParameter, nombreParameter);
        }
    
        public virtual int PA_MedicoEspecialista_Eliminar(Nullable<int> idmedicoEspecialista)
        {
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_MedicoEspecialista_Eliminar", idmedicoEspecialistaParameter);
        }
    
        public virtual int PA_MedicoEspecialista_insertar(Nullable<int> idmedicoEspecialista, Nullable<int> idEspecialidad, string nombre)
        {
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_MedicoEspecialista_insertar", idmedicoEspecialistaParameter, idEspecialidadParameter, nombreParameter);
        }
    
        public virtual ObjectResult<PA_MedicoEspecialista_MostrarDetalle_Result> PA_MedicoEspecialista_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_MedicoEspecialista_MostrarDetalle_Result>("PA_MedicoEspecialista_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_MedicoEspecialista_MostrarDetallexid_Result> PA_MedicoEspecialista_MostrarDetallexid(Nullable<int> idmedicoEspecialista)
        {
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_MedicoEspecialista_MostrarDetallexid_Result>("PA_MedicoEspecialista_MostrarDetallexid", idmedicoEspecialistaParameter);
        }
    
        public virtual int PA_Pacientes_Actualizar(Nullable<int> idPaciente, string nombre, string apellido1, string apellido2, string telefono, string direccion, string correo, string sexo, Nullable<System.DateTime> fechaNacimiento, Nullable<System.DateTime> fechaAdmision)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellido1Parameter = apellido1 != null ?
                new ObjectParameter("Apellido1", apellido1) :
                new ObjectParameter("Apellido1", typeof(string));
    
            var apellido2Parameter = apellido2 != null ?
                new ObjectParameter("Apellido2", apellido2) :
                new ObjectParameter("Apellido2", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var fechaAdmisionParameter = fechaAdmision.HasValue ?
                new ObjectParameter("FechaAdmision", fechaAdmision) :
                new ObjectParameter("FechaAdmision", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Pacientes_Actualizar", idPacienteParameter, nombreParameter, apellido1Parameter, apellido2Parameter, telefonoParameter, direccionParameter, correoParameter, sexoParameter, fechaNacimientoParameter, fechaAdmisionParameter);
        }
    
        public virtual int PA_Pacientes_Eliminar(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Pacientes_Eliminar", idPacienteParameter);
        }
    
        public virtual int PA_Pacientes_insertar(Nullable<int> idPaciente, string nombre, string primerApellido, string segundoApellido, string telefono, string direccion, string correo, string sexo, Nullable<System.DateTime> fechaNacimiento, Nullable<System.DateTime> fechaAdmision)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var primerApellidoParameter = primerApellido != null ?
                new ObjectParameter("PrimerApellido", primerApellido) :
                new ObjectParameter("PrimerApellido", typeof(string));
    
            var segundoApellidoParameter = segundoApellido != null ?
                new ObjectParameter("SegundoApellido", segundoApellido) :
                new ObjectParameter("SegundoApellido", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var fechaAdmisionParameter = fechaAdmision.HasValue ?
                new ObjectParameter("FechaAdmision", fechaAdmision) :
                new ObjectParameter("FechaAdmision", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_Pacientes_insertar", idPacienteParameter, nombreParameter, primerApellidoParameter, segundoApellidoParameter, telefonoParameter, direccionParameter, correoParameter, sexoParameter, fechaNacimientoParameter, fechaAdmisionParameter);
        }
    
        public virtual ObjectResult<PA_Pacientes_MostrarDetalle_Result> PA_Pacientes_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Pacientes_MostrarDetalle_Result>("PA_Pacientes_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_Pacientes_MostrarDetallexid_Result> PA_Pacientes_MostrarDetallexid(Nullable<int> idPaciente)
        {
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_Pacientes_MostrarDetallexid_Result>("PA_Pacientes_MostrarDetallexid", idPacienteParameter);
        }
    
        public virtual int PA_RegistroCitas_Actualizar(Nullable<int> idCita, Nullable<int> idPaciente, Nullable<System.DateTime> fechaCita, Nullable<int> idmedicoEspecialista, Nullable<int> idEspecialidad)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(System.DateTime));
    
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_RegistroCitas_Actualizar", idCitaParameter, idPacienteParameter, fechaCitaParameter, idmedicoEspecialistaParameter, idEspecialidadParameter);
        }
    
        public virtual int PA_RegistroCitas_Eliminar(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_RegistroCitas_Eliminar", idCitaParameter);
        }
    
        public virtual int PA_RegistroCitas_insertar(Nullable<int> idCita, Nullable<int> idPaciente, Nullable<System.DateTime> fechaCita, Nullable<int> idmedicoEspecialista, Nullable<int> idEspecialidad)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var fechaCitaParameter = fechaCita.HasValue ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(System.DateTime));
    
            var idmedicoEspecialistaParameter = idmedicoEspecialista.HasValue ?
                new ObjectParameter("IdmedicoEspecialista", idmedicoEspecialista) :
                new ObjectParameter("IdmedicoEspecialista", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_RegistroCitas_insertar", idCitaParameter, idPacienteParameter, fechaCitaParameter, idmedicoEspecialistaParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<PA_RegistroCitas_MostrarDetalle_Result> PA_RegistroCitas_MostrarDetalle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_RegistroCitas_MostrarDetalle_Result>("PA_RegistroCitas_MostrarDetalle");
        }
    
        public virtual ObjectResult<PA_RegistroCitas_MostrarDetallexid_Result> PA_RegistroCitas_MostrarDetallexid(Nullable<int> idCita)
        {
            var idCitaParameter = idCita.HasValue ?
                new ObjectParameter("IdCita", idCita) :
                new ObjectParameter("IdCita", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_RegistroCitas_MostrarDetallexid_Result>("PA_RegistroCitas_MostrarDetallexid", idCitaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
